%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 805.890015 536.280015
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.4 (Build 16E195) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 806 537
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 806 537
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /h put
dup 35 /a put
dup 36 /p put
dup 37 /t put
dup 38 /e put
dup 39 /r put
dup 40 /space put
dup 41 /three put
dup 42 /four put
dup 43 /five put
dup 44 /six put
dup 45 /seven put
dup 46 /P put
dup 47 /E put
dup 48 /T put
dup 49 /s put
dup 50 /i put
dup 51 /n put
dup 52 /R put
dup 53 /c put
dup 54 /o put
dup 55 /m put
dup 56 /d put
dup 57 /S put
dup 58 /y put
dup 59 /x put
dup 60 /B put
dup 61 /l put
dup 62 /A put
dup 63 /W put
dup 64 /b put
dup 65 /k put
dup 66 /g put
dup 67 /hyphen put
dup 68 /v put
dup 69 /u put
dup 70 /fi put
dup 71 /H put
dup 72 /f put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<









182B2B4EF44DEDF4ED394E10F64DFDE4F51112392F003F3FED3FED3F3FED10ED1112393931304379402C23281A1E0B1124251026231E262600281A262600110B0E21000F0E0C0D251D222601271B2926000F0C122100002B2B2B01103C103C2B2B2B2B2B818181005D00171617353311140706212226273316171633323736270E0123222411100033002623220706151416333237363501027C5E3335A63C70FEC9ADEC0EB70D273D83CF40260336987DAEFEFB0107BA0144A47FBE4625937CC24F2CFED104423E234387FC32CC76DA9BA548273C9256DD5250F7011D010D012EFEA1C0B25F9AB5BDAF6384022D000000010084000003ED05C200160053402C0607070817071708270427137507750808130D0213150000111D0607150C0A0D290A1A180115290016191718B80106B3216242182B2B4EF43C4DFD3C4E10F64DED003F3C3FED3F1139390112393130005D133311363736333217161511231134272623220615112384B440335782E9532DB91E318770B6B405C2FDDC512139A3599EFD5102A37637589AD6FDC8000000000200840000013B05BD000300070036401C07E50400010006030A0917171A06010229070300190809AA216242182B2B4EF43C4DC4FD3CC44E456544E6003F3F3C3F4DED3130133311231133152384B7B7B7B7042AFBD605BDCC000000010080000003F805BD000B00A740645902013A08011902010706170657056705790678078705B903C903DA030A05050608080709030284029402A4020302391209090405060504066D12070708080705040305060908050204030A00000403060A07060A061A0D09020A29000B190C0DB22162B9011600182B2B4EF43C4DFD3C3C194E10E618003F3C3C3F3C3F1112173901121739874D2E2B087D10C104872E182B5D057D10C010083C083C3130015D00715D7213331101330901230107112380AD01CEE6FE6601B1E6FEB297AD05BDFCAB01C7FE6FFD62021C8AFE6E0000000100890000013D05BD0003002940150000030A0517171A0102290003190405AA216242182B2B4EF43C4DFD3C4E456544E6003F3F31301333112389B4B405BDFA4300000001008400000625044700260085403B0708070E060F1708170E170F2708270E270F4819560B670B0C23250A1A1D23190A02041725211D171D0D060700061B1C2503130A2817171A112914B80101B21A291DB80101400A00012E25292600192728B8010DB3216242182B2B4EF43C4DFDE410F4EDF4FD4E456544E6003F173C3F3F3C4DEDED111217390111123912393130005D13331536373633321716173E01333217161511231134262322061511231134272623220615112384B240345971804E2C243CA265D84E2ABB6B4D6A99B71A297066A7B4042F984F243D3F244656539C548EFD3702E86B508EA6FD9102BB

0926072101032C002100052A0721011D121F21001B14182101200F22210021220E0D08270A21012625090A012D04210006290421001E111C210119161C2101002B2B2B2B103C103C2B103C103C2B012B2B2B2B2B2B2B2B2B81005D5D015D13161716333236353427262F01262726353436333217160723262726232206151417161F011617161514062322262701EF082544A864983D27738F894174DBB9F26B4302AA05263E99666945284E77C24269D9DEEFC70701B701505A3057575B4524161D24222A498198BC8E5A683D32474E40462A19131D2F2C45948FD0D9A002F900010017FFEF0209055A00180052B50D2E0AC00E01B8013F40250416391703060E0A111A17171A0301062900150E150F031F030203FC1619191AFC21677D182B2B4EF44DFD5D39C42F3CFD3C104E456544E6002F3F3F3C4DFD3CED10FDE431301333113315231114171633323637150E012322263511233533A8B6ABAB2615310D1E141F43277E5A9191055AFED593FD4538130B01028E0908816702C593000000020080FFE303DE044900170018005E403AB814C81402091308141913191428067703D707070800050E0A00060D0A051D120B180718180B160D2E0A290C0B1A1A01291619191AD2216242182B2B4EF44DED4E10F63C4DFDE41112392F003F3FED3F3F3C391112393130005D015D0111141716333237363511331123370607062322272635112501381A3083BC4425B4AA0223346793E5532D01AF042FFD39523460A85A9D020EFBD19E3D2A5499528902D81A000001000B000003EA042F00060102402E4201C5010200670068026803670687048805A700A802084700480245044A0586048905C704C80508492873280708B80109B321677E182B2B4B5279B8FF70B40105042004B80183B703036D1202010205B80183401E06066D120000010506040301010502030603000605040A0817171A03AF02BA018400000184B301AF0619194EF4184DFDE0E0FD194E456544E618003F3C3F173C1239011112391239074D2E2B104EE44D072E2B104EE44D2B4B51794025022912030304002912060605010502030603000605040A0817171A020403AF050001AF0619194EF4184DFD3939FD3939194E456544E618003F3C3F173C12390507102B07102B313001715D005D7113090133012301DC011E012BC5FE6CC0FE75042FFC980368FBD1042F0001000B000003E1042F000B002300B10A083FB00633B100063FB0033301B00C2FB00DD600B1000A1112B102083939303113331B0117090123090123011EE9F6F9DBFE970179E6FEF6FEFEE40179042FFE87017905FDFBFDDB0192FE6E02250000020015FE4903E804490018001900CA406E8A158818A71803070617063812481258126707770377078C1498009705981597169717A800A8161048004B154717


00>] def
/CharStrings 42 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/three 3 def
/four 4 def
/five 5 def
/six 6 def
/seven 7 def
/A 8 def
/B 9 def
/C 10 def
/E 11 def
/H 12 def
/P 13 def
/R 14 def
/S 15 def
/T 16 def
/W 17 def
/a 18 def
/b 19 def
/c 20 def
/d 21 def
/e 22 def
/f 23 def
/g 24 def
/h 25 def
/i 26 def
/k 27 def
/l 28 def
/m 29 def
/n 30 def
/o 31 def
/p 32 def
/r 33 def
/s 34 def
/t 35 def
/u 36 def
/v 37 def
/x 38 def
/y 39 def
/fi 40 def
/u20B8 41 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4003230 def
currentdict currentfile eexec

4B97CCEA71450D8E531692D46E62E16022290C29F42DEEF3AE2AA57BB2062670541C57DCA612C97CD20B5AA862CF62E53DEF8FD51AFF0DB2D91A425A9E6DD470D75E409C58501B8B1CF4A6813120AA8B54B2B5F2781D42FD3A503E773CDDD9E2E6C9E10761B7B23884DDED42A4D7029E2BD70D63B7F1877A0F5E87C17760E304BCBF4FE7E9B61B1E92D27A8634B6096DC398EAFEDD3DBB619CF2D2A75DDE72550601C377B712653E4BA9C93C43F018890B5F406BD4CC7A5D29741D059A7888C2EABDB6A95327A5F61FF15AFC6D0D80C405DC5AF47F599CF202B9293A9D4077857FF4401323243871D50263296358B1418B388E7E3BD5B82BF9E1A0944E96F8C3B586E16FF1B74E07027A68591F81B8369C89A64C3448AF3159CE6C9275AFAD8EB3556673F951EDC443A816F72663032CD14B8B44036AD5C8745AE079872E00261BEFF76009A47FC8EBB6AA9F8A9057FF0016BB34FC5E8EE51BE62CB39A080F5D0EDBFFC9F21CAD12FB6B2327162955C29EBFAF52E55AA8C4151CD8A8823E82F5CEF9ADCA01820B24C07CE0E3CB643BCE7A1B8EBC81C5E2A6D8A73C6597EB5396FD13F302013E628822B79B70D2630E418581C1171E6675D311A61C58B011DD139BD385510AF514C293BED320F05E7429D488A92E8F854919EEDBBF1079D76A69E399CA662018F6F46CC0AC3958EA9AD5C65CB6DA6AD4622641FC7A3A340A17CAB7B5695002716C78E104B745DDB91E7E12F12F20C9059EAED97FB09B7D9D9BAD89976B060ACD288A730D5327DA998CD81CDC6FF3D70D591EB777A45961EAD782D424538318FE292B3CF9C77B51395813E7500D11EB59E8254C38D9387D4F3293007333A88262A53203F152A6AE6F91C505C6BF65DC5150108DCE6625775257B13A783E75231F4074BF48D9D05FE6BE67834CE34529CBDF827A4BBFC79F1F314F4468E68DDA0BBF367C37A3A491FB43F10E3B8B9830EB5818C7193574FBB7498AD76878B4F29825C77F199B24C26E0A53F382F174A63E86D39CDC4B67B745AFC8FCD23AB28DFB839620695A5EE1F80F1A3B05215D8021715F387C76B36883738C8DF1CE4B2DEF18049B663410E0D70929568A86650C7AC34C9BCED98F42376437A6E665678979CFCF4D7DE7F944022F9CF1666FA3888ECF38ADDA2E7910E8929B4B7F374B11DE02DC7751CA538BED50711F7F07DB6F639247A4F90FDFCA18F92477F16D6BEDFE95AB47E399EB5258E5DEC9EBBFFEB979916DD279C15747019BA56874A8D7791F611E65243703809C924C0C6A780F983AFA92AA774001FBCF0E907C726D98227D2A2D43A469F73E6B7D62B22894D82E434CB0FCF4FE90E3E9EAFAA386473ED62B6DABE10976181FD0D2EFCC1F0E400BA136C415C4CA00B6BFB84FA9E8D58FE55FE6A51ABCC25B2E55098EF9CC9705743FA73786FE5E224D91D744


C4BBFC4CA066E9A5F99DC3247AF65E1E6C6784B933290591968F0942034D28C689C95581D95F423317293124FE772AA9F345E658388C71D5441983DBD092F8FC06EA9F7AE7DCFE9371DC4D9778B9BD2DD211463EEA9FEB223ABC43F288062313F330082491CF85D0C32DAE4BEE6782AAC47EE7E2FEBEA7BA40E2BBF7E487BC822D37F079205E03E4B79B09D075C0FDB0CE38026A564833EFFC1C5CC63D70ED228F019BAAD438E819AE3006FB8D8E9D00EE6784F12DB4CA920862ABA4E4CD4FF879DE5E908F43A2376061F82138067437EFFDE15515CC4767446CB28684E4F2D00B65937ABFC33651EFA5EA76B8A64E9FC07FED69522A1FCCA402D77CAC69CAE30BC5ADC28CB6D1B708EF846541B9CBAC71C8870C43C5D3CCFBFFCAA2C6A2D5F9D2139E6FD48A7B9BE75E6B3C32E18D0ED15417E5E8951D14A890CAE3C07BCC71BAB96FD8692706D92D232DC31F641DF4674658BC4BD685B0B6037DA47E2E104EF89D2E88E56621F41B663DD8CCD4EAF12C6D916F48FA84969279894FB1D09883197C420F9DC0DB4DD293C91393A6B03B04194AB0CED2800EE828C11C007B936C137BE5C75B543EEAFD70FF720F91F29F78413A891F1B54648C208A6E885ACAE1610C62DA5A4B06FCC5122EA5196E29C24A1635E2D5DEC1D57FC61ABF5B3F23E8C782320EF1454A8B19ADCFDDB0871AA96D50F02D73782E96FB49FC3B71E9818C24CD1F44A74E6E79C2AEE65BA3F7E3AF5C56668814F42BE63AE011077676549D93AF8CC1B97ED597AA1AA891CC03BDBA5F26A0A60348A943999853F49249CDBAD8E6C9ADE30A871C9FC2D65F155CD85A5E439A771A1041B2BBF340D2339CEF1090814099768A9E23A003DD3F1A2AF3FBF6C6541F2C9F6778DCD67378FB1B94EF19A504ABF61E248C8FBC959D29D1C5A93DA536BC4FAB2CAFAD495D3979F541F5FFCA612C46F8EAE6718D360E0B425E5AE8859A75766AAC4BCFF860F34F653EFFBE5AB461B10E58C67149E80C048982D6CED1CE2D9FF8F9FC0769A0C8FE50342F72458D17AC14EA7C5813855A83A23A5DE337B44D1B73D8CD74B53E196981337E107B070C92A612DDF2F27E4D103BCDBA35BD9B3FA89CD49BEB1F905835323EEDAA3B34937B4ECF6E25D8F81A8BCEF047CA680E3B4D1646F7FA7BC97B2444B6304D43334317A3928DFA75BCB27E1921A70D4BBBD33352ABBC60BFF9635C4406AF874A2170E283B61C021C98C387E6FA8C5688887E7DA11E2EEF8E510CB5E081E173B8F8E0E9F86AF19292B913CC7AEBDD7595062B82866FB4D211032EFF8D3414487E6EB14D54B2BA0A6B439228AC839393D087CA6AAF6EF708BEDC807731F7FB2864B719A2EA571CB4808252AA45885B8F6D3E4E1E9FCB6A8A3DC1019BF0F3B5A71F85E1EFB7E05E344915B99A57018AD347C85B0A4A2EE9BC7EB8EFB686E1B5
3B5F9466542EFD79312E8D72D6A71F332AE045924B1720A1CD425DEC609513A1B0274508338FE8C65044A70B36D3A03EF226DD2F65F059E9396139F0B2C573EB064DF8BF69B203CB6D04705723B11650BA69FF2C475EFE3DDB4006EFC524530A138B2585BA423EB2705471F67605C0D853A5FDC6DDC3995C177E02599325A3ABD6A528E2FD07366FB86A9E4980C4787C879F7C303C5F4B7C449A80108CF363564372CAF492724CCDEF8A0D3C5F6C67A5FFFD4B454E33634B0DCEF83B30F7FA829DDB0A046FE2614A2535A197B9E7FA1252873578F6F57DA1A66F7386A55EA40BAE987D0753AEE9D244E7810D54CD6EEA5C35850ADF88A139EAF80F7720EFD5C98841A93292348FE722F7590E38C93C9AD7D9DAAE98950AE85BE650DFA4CDA98C6CD7018D2EB6D34C8192FCC846904756BC537D3A3DA2EC82480AB38FB7B66793A97AA4061207306E834ABC1B29D3EDDEB42AC7217F88E4A4392C5756704080EA1B9D468D71AF99B4DAEF955929381817AFCB7CDFA8323B8C0564645480E7951F95100C3AE1AE6AF747698C6E8B3951F49CB019ABEAAEB72B7FF5C754A4602D02C48DF1C50574B6A91171C350A462DED5405A652AD4D5600982E56283C7E1A8EA0EAD771E87847381D0DA8BD43398E02D37CA4395569222747A986B275AFA7F50B01B20BC991F5A01322968EF77F28AEF1F28D8B36082BEA0DE9D8804B3B58A57A3CB7AEE4E0AC7C65DCC2E60F856A79FD6E90C0989BC8086EF8E743D7EE3664E4FE4C7AED7C2E6B9BBEAFAF5904D3E795AF5D3BE4D0E9C825E8069DDBF0FDFB969D68F73322F745F5A6BDA0BBD57CF1398C1CF113633389FE782A086E8CFC3142C6E0BFC70C56E688490F6CEDB21B01193DF25E0BAF18E05B7425BC659AE1766185C4C2C9BC209E3895EA08AB367498B0ACCC079A8905A12851A2CF5E4FADDDFAC9D8E84986696DD81745E50276E25060AE0DEB6C632E8ECA55D4C41C639B944C6064F41B61ECFFF5E5B6EE97812F22A3122AC3BC14F2248712576D4E083041928B6865F90FBFC86316E76448D0E686D45ACD71CC6343FC7E6AFD0818D4FDA5FCE59847136A75CE66C936EC20ABF6F6EC4BB13E9063EC0C8A0C0B905158271C89DB1EE362B2639B3DFDB0BC55859E7DD350FA1D605E948F5DB29BF10C5AA43858B2E2C87896B375B37D03CA4CADA860512BDBD77981CB3CBF135A2B7C98BE43117C0F5725268F2671E1E04B2BFA5DD4E43F9147D8089BED9DAA6F45ABB868BED653BA7CAAE3018618D0D92A113D7306056AF14C2AEA6489539B27855254FB3322EAD6C3CCCA29289FAD82D1342F07B19E6D5097C5580406D91751DEB685F8540587BFF799A2164236F315970D00775CF7CB538E97627802329AD04B762D71D5FA6864D59505D2FAD9546F90A4538C8E205B9E6103924E6D380AC27BBF17672C8
0C169BA728BD39C565E36EB321DE549AF492973ADE553155C516F9C71D5916954E43A2BE59A008635F5F74FBEF06FA37F0620E02F5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 805.89001 536.28003 rc
124.72441 450.39026 m
205.72441 450.39026 l
205.72441 414.39026 l
124.72441 414.39026 l
h
124.72441 450.39026 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
124.72441 85.889763 m
205.72441 85.889763 l
205.72441 121.88976 l
124.72441 121.88976 l
h
124.72441 85.889763 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 165.22441 432.39026 cm
/F1.1[ 12 0 0 -12 0 0]sf
-26.349609 4 m
(!"#$%&'\(\))[ 8.666016 6.673828 6.673828 6.673828 3.333984 6.673828 3.996094 3.333984 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
124.72441 385.61859 m
205.72441 385.61859 l
205.72441 349.61859 l
124.72441 349.61859 l
h
124.72441 385.61859 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
124.72441 150.66142 m
205.72441 150.66142 l
205.72441 186.66142 l
124.72441 186.66142 l
h
124.72441 150.66142 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 165.22441 367.61859 cm
-26.349609 4 m
(!"#$%&'\(*)[ 8.666016 6.673828 6.673828 6.673828 3.333984 6.673828 3.996094 3.333984 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
124.72441 320.84695 m
205.72441 320.84695 l
205.72441 284.84695 l
124.72441 284.84695 l
h
124.72441 320.84695 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
124.72441 215.43307 m
205.72441 215.43307 l
205.72441 251.43307 l
124.72441 251.43307 l
h
124.72441 215.43307 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 165.22441 302.84695 cm
-26.349609 4 m
(!"#$%&'\(+)[ 8.666016 6.673828 6.673828 6.673828 3.333984 6.673828 3.996094 3.333984 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
124.72441 252.81544 m
205.72441 252.81544 l
205.72441 216.81544 l
124.72441 216.81544 l
h
124.72441 252.81544 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
124.72441 283.46457 m
205.72441 283.46457 l
205.72441 319.46457 l
124.72441 319.46457 l
h
124.72441 283.46457 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 165.22441 234.81544 cm
-26.349609 4 m
(!"#$%&'\(,)[ 8.666016 6.673828 6.673828 6.673828 3.333984 6.673828 3.996094 3.333984 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
124.72441 186.7682 m
205.72441 186.7682 l
205.72441 150.7682 l
124.72441 150.7682 l
h
124.72441 186.7682 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
124.72441 349.51181 m
205.72441 349.51181 l
205.72441 385.51181 l
124.72441 385.51181 l
h
124.72441 349.51181 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 165.22441 168.7682 cm
-26.349609 4 m
(!"#$%&'\(-)[ 8.666016 6.673828 6.673828 6.673828 3.333984 6.673828 3.996094 3.333984 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
522.04401 493.99493 m
549.38696 480.32352 549.38696 458.15778 522.04401 444.48636 c
494.70114 430.81488 450.36969 430.81488 423.02689 444.48636 c
395.6839 458.15778 395.6839 480.32352 423.02689 493.99493 c
450.36969 507.66641 494.70114 507.66641 522.04401 493.99493 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
522.04401 42.285091 m
549.38696 55.956509 549.38696 78.122231 522.04401 91.793648 c
494.70114 105.46513 450.36969 105.46513 423.02689 91.793648 c
395.6839 78.122231 395.6839 55.956509 423.02689 42.285091 c
450.36969 28.613607 494.70114 28.613607 522.04401 42.285091 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 472.53543 469.24063 cm
-20.34082 -10 m
(./01\(23\()[ 8.003906 8.003906 6.000000 6.000000 3.333984 2.666016 6.673828 0.000000 ] xS
-47.024414 4 m
(4&5677&38#%263\()[ 8.666016 6.673828 6.000000 6.673828 9.996094 9.996094 6.673828 6.673828 6.673828 6.673828 3.333984 2.666016 6.673828 6.673828 0.000000 ] xS
-23.003906 18 m
(9:1%&71)[ 8.003906 6.000000 6.000000 3.333984 6.673828 9.996094 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
522.04401 415.47525 m
549.38696 401.80383 549.38696 379.63809 522.04401 365.96667 c
494.70114 352.2952 450.36969 352.2952 423.02689 365.96667 c
395.6839 379.63809 395.6839 401.80383 423.02689 415.47525 c
450.36969 429.14673 494.70114 429.14673 522.04401 415.47525 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
522.04401 120.80478 m
549.38696 134.4762 549.38696 156.64192 522.04401 170.31334 c
494.70114 183.98482 450.36969 183.98482 423.02689 170.31334 c
395.6839 156.64192 395.6839 134.4762 423.02689 120.80478 c
450.36969 107.13329 494.70114 107.13329 522.04401 120.80478 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 472.53543 390.72095 cm
-43.347656 -3 m
(.'6;272%:\(<#1&8\()[ 8.003906 3.996094 6.673828 6.000000 2.666016 9.996094 2.666016 3.333984 6.000000 3.333984 8.003906 6.673828 6.000000 6.673828 6.673828 0.000000 ] xS
-50.033203 11 m
(9652#=\(>$$=25#%2631)[ 8.003906 6.673828 6.000000 2.666016 6.673828 2.666016 2.677734 8.003906 6.673828 6.673828 2.666016 2.666016 6.000000 6.673828 3.333984 2.666016 6.673828 6.673828 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
522.04401 330.43588 m
549.38696 316.76447 549.38696 294.59872 522.04401 280.92731 c
494.70114 267.25583 450.36969 267.25583 423.02689 280.92731 c
395.6839 294.59872 395.6839 316.76447 423.02689 330.43588 c
450.36969 344.10736 494.70114 344.10736 522.04401 330.43588 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
522.04401 205.84415 m
549.38696 219.51556 549.38696 241.68129 522.04401 255.35271 c
494.70114 269.0242 450.36969 269.0242 423.02689 255.35271 c
395.6839 241.68129 395.6839 219.51556 423.02689 205.84415 c
450.36969 192.17267 494.70114 192.17267 522.04401 205.84415 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 472.53543 305.68158 cm
-36.580078 4 m
(?&@\(0'#5A23B)[ 11.115234 6.673828 6.673828 3.123047 6.890625 3.996094 6.673828 6.000000 6.000000 2.666016 6.673828 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
522.04401 247.38075 m
549.38696 233.70934 549.38696 211.54361 522.04401 197.87219 c
494.70114 184.20071 450.36969 184.20071 423.02689 197.87219 c
395.6839 211.54361 395.6839 233.70934 423.02689 247.38075 c
450.36969 261.05225 494.70114 261.05225 522.04401 247.38075 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
522.04401 288.89926 m
549.38696 302.57068 549.38696 324.73639 522.04401 338.40781 c
494.70114 352.07932 450.36969 352.07932 423.02689 338.40781 c
395.6839 324.73639 395.6839 302.57068 423.02689 288.89926 c
450.36969 275.22778 494.70114 275.22778 522.04401 288.89926 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 472.53543 222.62648 cm
-44.791992 -3 m
(027&CD#'2#3\(E1&'\()[ 6.890625 2.666016 9.996094 6.673828 3.996094 6.000000 6.673828 3.996094 2.666016 6.673828 6.673828 3.333984 6.673828 6.000000 6.673828 3.996094 0.000000 ] xS
-19.341797 11 m
($'6F=&1)[ 6.673828 3.996094 6.673828 6.000000 2.666016 6.673828 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
522.04401 159.50673 m
549.38696 145.83533 549.38696 123.66959 522.04401 109.99818 c
494.70114 96.326698 450.36969 96.326698 423.02689 109.99818 c
395.6839 123.66959 395.6839 145.83533 423.02689 159.50673 c
450.36969 173.17822 494.70114 173.17822 522.04401 159.50673 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
522.04401 376.77328 m
549.38696 390.4447 549.38696 412.61041 522.04401 426.28183 c
494.70114 439.95331 450.36969 439.95331 423.02689 426.28183 c
395.6839 412.61041 395.6839 390.4447 423.02689 376.77328 c
450.36969 363.10181 494.70114 363.10181 522.04401 376.77328 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 472.53543 134.75246 cm
-32.34668 -3 m
(G:$&'7&82#\()[ 8.666016 6.000000 6.673828 6.673828 3.996094 9.996094 6.673828 6.673828 2.666016 6.673828 0.000000 ] xS
-24.679688 11 m
(H66%$'23%1)[ 3.333984 6.673828 6.673828 3.333984 6.673828 3.996094 2.666016 6.673828 3.333984 0.000000 ] xS
0 J
0 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 536.28003 cm
216.18553 100.04175 m
396.09793 71.871643 l
S
0 i
397.29419 73.831497 m
395.95547 72.855263 395.66165 70.97863 396.63788 69.639931 c
397.61411 68.301231 399.49075 68.007393 400.82944 68.983627 c
402.16815 69.959862 402.46198 71.836494 401.48575 73.175194 c
400.50952 74.513901 398.63287 74.807732 397.29419 73.831497 c
S
214.98929 98.081886 m
216.32799 99.058121 216.62183 100.93475 215.64558 102.27345 c
214.66934 103.61215 212.79271 103.90599 211.45401 102.92976 c
210.11531 101.95352 209.82147 100.07689 210.79771 98.73819 c
211.77394 97.39949 213.65059 97.105652 214.98929 98.081886 c
S
0.60000002 i
216.21031 168.24673 m
393.23849 145.39894 l
S
0 i
394.3815 147.39034 m
393.06958 146.37836 392.82645 144.49449 393.83844 143.1826 c
394.8504 141.8707 396.73428 141.62756 398.04617 142.63953 c
399.35806 143.6515 399.6012 145.53537 398.58923 146.84727 c
397.57727 148.15916 395.69339 148.4023 394.3815 147.39034 c
S
215.06732 166.25533 m
216.37923 167.2673 216.62236 169.15117 215.61038 170.46307 c
214.59842 171.77496 212.71454 172.01811 211.40265 171.00613 c
210.09074 169.99417 209.84761 168.11029 210.85959 166.7984 c
211.87155 165.4865 213.75543 165.24336 215.06732 166.25533 c
S
0.60000002 i
217.052 182.3172 m
403.73541 380.77728 l
S
0 i
402.7923 382.87076 m
402.84293 381.21469 404.2265 379.91321 405.8826 379.96387 c
407.53867 380.0145 408.84012 381.39807 408.78949 383.05414 c
408.73886 384.71024 407.35529 386.01169 405.69922 385.96106 c
404.04312 385.9104 402.74167 384.52682 402.7923 382.87076 c
S
217.9951 180.22372 m
217.94446 181.87981 216.5609 183.18127 214.90482 183.13063 c
213.24873 183.07999 211.94727 181.69643 211.99791 180.04034 c
212.04854 178.38426 213.43211 177.08279 215.0882 177.13344 c
216.74426 177.18407 218.04573 178.56764 217.9951 180.22372 c
S
0.60000002 i
216.26347 232.37816 m
393.18533 230.66908 l
S
0 i
394.08447 232.78181 m
392.90164 231.62161 392.8833 229.72221 394.04349 228.53938 c
395.20367 227.35654 397.10309 227.3382 398.28592 228.4984 c
399.46878 229.6586 399.48712 231.558 398.3269 232.74083 c
397.16672 233.92368 395.2673 233.94202 394.08447 232.78181 c
S
215.36435 230.26543 m
216.54718 231.42563 216.56552 233.32503 215.40533 234.50786 c
214.24513 235.6907 212.34572 235.70905 211.16289 234.54884 c
209.98006 233.38864 209.9617 231.48924 211.1219 230.30641 c
212.2821 229.12357 214.18152 229.10522 215.36435 230.26543 c
S
0.60000002 i
216.25011 302.72849 m
393.1987 314.22427 l
S
0 i
393.93802 316.3981 m
392.84488 315.15305 392.96802 313.25754 394.21307 312.16437 c
395.45813 311.07123 397.35364 311.19437 398.44678 312.43942 c
399.53995 313.68448 399.41678 315.57999 398.17172 316.67316 c
396.92667 317.7663 395.03116 317.64316 393.93802 316.3981 c
S
215.5108 300.55466 m
216.60394 301.79971 216.4808 303.69522 215.23575 304.78836 c
213.99069 305.88153 212.09518 305.75839 211.00203 304.51334 c
209.90887 303.26825 210.03203 301.37277 211.27708 300.2796 c
212.52214 299.18646 214.41765 299.3096 215.5108 300.55466 c
S
0.60000002 i
216.2261 371.03735 m
396.05734 390.48233 l
S
0 i
396.70288 392.68582 m
395.66406 391.39508 395.86826 389.50659 397.159 388.46777 c
398.44971 387.42892 400.3382 387.63315 401.37704 388.92386 c
402.41586 390.2146 402.21167 392.10309 400.92096 393.14191 c
399.63022 394.18076 397.74173 393.97656 396.70288 392.68582 c
S
215.58057 368.83386 m
216.6194 370.1246 216.41521 372.01306 215.12448 373.05191 c
213.83374 374.09076 211.94525 373.88654 210.90642 372.59583 c
209.86758 371.30508 210.07179 369.4166 211.36252 368.37778 c
212.65324 367.33893 214.54173 367.54312 215.58057 368.83386 c
S
ep
end
%%Trailer
%%EOF
