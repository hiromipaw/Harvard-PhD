%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 805.890015 536.280015
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.4 (Build 16E195) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 806 537
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 806 537
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /h put
dup 35 /a put
dup 36 /p put
dup 37 /t put
dup 38 /e put
dup 39 /r put
dup 40 /space put
dup 41 /three put
dup 42 /four put
dup 43 /five put
dup 44 /six put
dup 45 /P put
dup 46 /E put
dup 47 /T put
dup 48 /s put
dup 49 /i put
dup 50 /n put
dup 51 /R put
dup 52 /c put
dup 53 /o put
dup 54 /m put
dup 55 /d put
dup 56 /S put
dup 57 /y put
dup 58 /x put
dup 59 /B put
dup 60 /l put
dup 61 /A put
dup 62 /W put
dup 63 /b put
dup 64 /k put
dup 65 /g put
dup 66 /hyphen put
dup 67 /v put
dup 68 /u put
dup 69 /fi put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<

002A002A002A002A40292A292827262524232221201F1E1D1C1B1A191817161514131211100D0C0B0A090807060504030201002C4523466020B02660B004262348482D2C452346236120B02661B004262348482D2C45234660B0206120B04660B004262348482D2C4523462361B0206020B02661B02061B004262348482D2C45234660B0406120B06660B004262348482D2C4523462361B0406020B02661B04061B004262348482D2C0110203C003C2D2C20452320B0CD442320B8015A51582320B08D44235920B0ED51582320B04D44235920B09051582320B00D44235921212D2C20204518684420B001602045B04676688A4560442D2C01B9400000000A2D2C00B9000040000B2D2C2045B00043617D6818B0004360442D2C45B01A234445B01923442D2C2045B00325456164B050515845441B2121592D2C20B0032552582359212D2C69B04061B0008B0C6423648BB8400062600C642364615C58B0036159B002602D2C45B0112BB0172344B0177AE5182D2C45B0112BB01723442D2C45B0112BB017458CB0172344B0177AE5182D2CB002254661658A46B040608B482D2CB0022546608A46B040618C482D2C4B53205C58B002855958B00185592D2C20B0032545B019236A4445B01A23444565234520B00325606A20B009234223688A6A606120B0005258B21A401A4523614459B0005058B219401945236144592D2CB9187E3B210B2D2CB92D412D410B2D2CB93B21187E0B2D2CB93B21E7830B2D2CB92D41D2C00B2D2CB9187EC4E00B2D2C4B525845441B2121592D2C0120B003252349B04060B0206320B000525823B002253823B002256538008A63381B212121212159012D2C456920B00943B0022660B00325B005254961B0805358B21940194523616844B21A401A4523606A44B209191A45652345604259B00943608A103A2D2C01B005251023208AF500B0016023EDEC2D2C01B005251023208AF500B0016123EDEC2D2C01B0062510F500EDEC2D2C20B001600110203C003C2D2C20B001610110203C003C2D2C764520B003254523616818236860442D2C7645B00325452361682318456860442D2C7645B0032545616823452361442D2C4569B014B0324B505821B0205961442DB8002B2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8002C2C2020456944B001602DB8002D2CB8002C2A212DB8002E2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8002F2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800302C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800312C2020456944B0016020












00>] def
/CharStrings 39 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/three 3 def
/four 4 def
/five 5 def
/six 6 def
/A 7 def
/B 8 def
/C 9 def
/E 10 def
/P 11 def
/R 12 def
/S 13 def
/T 14 def
/W 15 def
/a 16 def
/b 17 def
/c 18 def
/d 19 def
/e 20 def
/g 21 def
/h 22 def
/i 23 def
/k 24 def
/l 25 def
/m 26 def
/n 27 def
/o 28 def
/p 29 def
/r 30 def
/s 31 def
/t 32 def
/u 33 def
/v 34 def
/x 35 def
/y 36 def
/fi 37 def
/u20B8 38 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4003230 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C93181B17796A1204F5476A04185A500C7D1646046CB4388F5303793A562DF470C83B8683F8ED2DCB37B4DB455B059B26738571739E1E8EB009331EA5D50735911B70DB760F279BF2872346975F078FCAD5A0246E302D61C2BFA6CC5B74DFF6C22C026C4ACA1C69402B1D8A4D4DD9DA873ADB54E2C1123C587C44D81724C423F57CFA5CA314F163D552B5441B2BFAC1C1FFB5517254A12E730284D6864E7F63EA558858BD6F6335D69CE071C31B2287FF239A7B549F4CD3537C9D84599582434F7EC576EA7356DCDE4836F5B0E5F7E91FC4F43A7DE03E3D51CE92C913BB6E5AF0F489FE7B42AE6B5C340876465EB24A2D37F56384FA2435DFCF8EBD875E5C208F7350B50FD9F147EA981750FC285C2328E817CB7E5E8396AEAE6B6D84D35CACEA0B32405ED8CACB729B254E7E8D2BC05121BEBA7DEBCA63D246FF552452E643BB3F7C717032F1DBBDA45E71AFBE9E7C8D7720CF7AE6E7EDDCEBAAC2F7B6568C4B56BD757AD6E725573504BFE337A473A1CA42961221FEA46FF4B600BE4C444D18A53F7B588538FAC8B058B170CD2F366381B2914C967F29CC003A21AD8AD5E9614C5ACA7D65AD1935F8962069C433EB61B37E5251A297C093DCA80273616834D485EBC049237E89460B2D79C355FFDFC04877E2A6FD9A3902340BF36CF88C2434DA523DF79AEB030B2E488EE41F483CF68E6AEF390D49E1A8254B80C11978114983826F33FD64FC537CE8AFAD159AA04FDB865B476FF960DA8ACF1F0AC086CF2A0F
B99985021C6BA06E42566846B7462ABADB6262BE74F318492A51BEBEDE7DF545C7D6DC917C52B3F954A6AD8FE85E7A77E1A033B9FD3C007D6AAB61889DB7CF9712C1C823A75252A32F9CEA6294531DCC7E4CE3B2677018EF11B85E40E8DE335984ADCF609ABA4D075DBE6430302139136646E23D6A983736BFEE1A8CED519807AD13B57FA70C3A7F03EF36A6958E2EFD84E0D4DD428F806F5C8D976AB8AD6226E701145AAF117365689FB12FAC8651F947779AA6E469EB1C9A7E3788266E9E8AEE380D51DD946B4BE1B05B5C4E1A858CD31CEEC6C233FD5E0429BCD6808AB4F98D043BB6EBE03B664052DB79F5DE61A384CB421A28B0285686DE97AFCB7A2BE72FA3381993C88F4F573F739E0132F7D7479FF746442B8FA38BF7CEC4A291DE809F6E5A15D021FBBB26B6301CDDA6110A3225F108F5A119CD6C990B6C951D90F0E3843EC780D3E646F7E000E211E90859BED810B61C3044E9C1B1AEA2B6C11519883B389A0E5269BB76EE4F656F5E5BE5DDD4EA576DC981D611DF22494A513C1F01D6D2321AB9BB955DE9DF1AD9265BF82DB6F656236718DB3A7FF8AB3C5FEC5584A74F6E8AC6DF14FED557F0F0194B00409A931C82BA1768F96C92B34D85F6F633FFB246B6073B071C3EB12F59C30F29E932AC50B3EBE01977170788765037DD9B6139CF8C7F6AF16791A824410FEF5B5BDA775860B2808F736A9D718CC327CD25359AC1D6AAD5DA263B473F9AEEAE306249024B0FEFCBA91702ED774344483C4C499B5C9967C9FB43DA54AC08B8CA1938DC2AD594527815F586B5CEACC536696A76680B72E4635649038E5939C1792DAC7A6AAEA99D55331D245171A1ED6FE1DDFC1EF1340CDB223E0A285FE67E254E99981AF53F2C36E727EFDB1CCEB4CC5A43F0B4940124F1B8A4136161D6DB5131C21A51EE4EF1F4E8A3A15167198D2F4B36EDE5991B40BFBD1D46A7ED74166BC19420C9D662A602FEFB312F6AAB4AD416968F09FD072225E735F8CA91732278CB11F47DB4805902EFAD608399A31EA376DB561A5E4BFEFEE4F3E0DD86F61307FDB7F2E776439C834BE14A6500A46A412AA4CEAB8F28A16F9928ED9D8F73B92011E0234D9F667A834D43DE922001FCD664C0D5E018B2593762F25554B296E5E7291489FCE7D76E122547DBA68697A789BF9D66AA58F348AC3A01FBCC3C761288CF535320ABB82A095CF359EC21AB42B71D5AE9282C75B3C0A722CDE6C2C7C0B8AA3519690C875F9DDF6E020A5B20497066D0ABF25280F39438E9A90564656E75F33487DC8712EACB093812B892B52BFD597051B45573AE375306DBE91F34FC1FBB85806B09268C945D037143488CA074A0FD42C39F77D62857AF1DF623D732D359DAD1341F72D9D33FCF4676AE531FD7A12326746C16EB757647840A9C27F31BDB082E1239A78CF3F364EE99417F46A578
7730ED74E9DD683C0EE4BF5DF3C13850DD8902241D6FB1D1B1C7C2AB5D840650376584D20B7E187AF7C729CB9E70E5DE4FC891A403BF02CE30CE49DE9DDDCE07764F4FFC3767DA0252262AAA552CEA8E95B72896C6F5A978B2F90FF29FFF6D5E5E357AD996E5CE6328897499D0979ADB1A4705A280FC9DD7486D4F90C7C90530D970E0B65682F498F98B8B08034F1A0AB24E8AF5DD782221FD1DE39F26822463F0BAE720977D507CDB2782B701A7830D07D40670F14CC2E9F7C650CFF54512D2A2E047D31BA6D9BE6C3854EB799DB003B141D362A9982DA0D28559E74698D59AB1129983E097B0938177C9DA1C452E0563FA5FEAD778E4B65EDF4A79C2426EAD7C126E7DD151E6E87C6F45C0147205BA1F9B83E78FC40E976B343E5B543D314DBA88E6B2A3C796FA8F93BCE77F41B24956A83039D16F242CD206412E15F8EC95C26D63F0CC54B3BCEB712E0B10E1A358F28E888F1147A499FF24F22F1B217377FD918A584503A6BDD45F39446172FC6D7C3ABF8F01822FF17E0F4C881FADAA10A460D80CEF80F04FBFCF378CB10C52240CFFCC8E1CECCB6C9D5E9F9C6D980C11BB05FDBD99D60B14FC5607B581A6817C94FF02D73144E26473D4E3BB837DDC835DE51CCF0434A3DDD121B128D6058D35B8575DDAD0858B9CD8D1963E19EF3064A70FB3F6D9D2E32F94803278A666DFF54CBB2C25E8EC21EF3E6D12E2B509440738B9015B2F6451DEBCFB7108154827613653E8B1229C143BA7100ABD9281F0A0C52F3BFE51DE6E0EF9FEB1A678495FA424BBF43EF7DED1C438ACDCF5832048F41C8556E75CD114DCA644793A38CFF06F8251F227900CF1DB67D1ECC72113381678F31A21314A60E91348DBCBAE637D74BBB853A3ECC38BBF2D71F3ED6AF6D9712C0E8585D82648FE03164B855394DACE491053C5D658255ACB4F7753ED8B720E0CDDBA640E996A3ADBC3D16DCDB7693B2BC9606D4FC1550F50BA233E16C0CF432D68BE4613F6532D2493A2BA3E2041D8A10F691D187885F2AAA83353C9E0FBEDEECD0EA86A91974C8C1E722CCF5667885D69DB2FA78F158BF74E2A20C2D3CB5CC1A1EE64DD9E0504BECA3C094FD5C245CF2E8A44C04388383CF7CA789D44FEC6A16455E8F2A5A78F1FCC01EE1B3CC8B34C21113BBCE59718D4B73B4A8FCD2AB6DFE08102D1A6FDBE4C3123ED0CE44A20DD39FCC24BFDF23000E77410CFF6F76EF67DA725488799170B2C52F8AB7DEB52A5F9BC48AB69692A53FC84C437780725776A9FD11DFF55B2796579B2DA9A4C8FB3F462DA8B0E46D221DBE595B949C98C93B4C7DBE951F1B14C54381DDB1E17552071DBD10E1F95E501EAEA407C40BBC56025B3DBE55A0875BE07150BFE843AA0B494BD2DFDECB14668051C85494D90379CAFB35097887DF1AC7F5089E8CE64F4893D2C5576AD2F8F549A4D1DED444ECE

35DF2F540C8ED4BC633394AA91BDFE0B63A71FE794AA299AEC7468D974D635526E7B1FA0D4EACFB0C629C1215A55639755C1A9C4E623064F0D54AD4CF0FC73BE26B677C109A6204A68928529FD2C42969D109A2CCC0B221D86426941B61B70C33C21B92905CDAB151B824AA98B1B20C059195AFEE08E05DCFAE734142065277EA14616977957FE2CD1ECF39B10C6DD362A7445604F4087280ED413FB0FE041FAA9EC32E8C54F7B76D80BC23E93F0228EED069D671101B696A7DF2C5BE3B98DD1004C8B64E34EA5DECDB8C0A9AD73D4DD0D30731C359B662EEE23D71185BA81BEFDE3B28AD73E7D43D66ED1F37DE1A4B101737BA5F7533BA3C93095A717D48BFAE7574CD6C31F2AFBB99E691BE56D272EC32B5E42F9C0DE324547E0150849F068318EEFDFF9E6087B083FABAE1422AF109AAF512C93F85E20226EE41999D1BC4B74E815FDDC66F28598DD6564D9E11EAE5A3598BCC9C862A3D98813AD22B7BD92E68AF83FBEFD70555388249A21F8FA7D8C6FDF3238B10AF9A4809FC50825519A1FD0151F432865839D3D1A5C2A52FFFAB2C634BA59A452097BE178F10AF251B36AEDF1278D2101E62F77DFB52874070DE4450277128DA69B88A68F59047ED3F050CE3B2E65FB834061FA9A9DFCE4001238BD19A93EBF3068E6D2CE068E00F2DFE1AA35727501B7D0441B0836C189DD1B8528EB760BD6F05AAA7CABC3D9DB3EC91AD61BDE2714FA699E8C835E7D6B37059527B4568E70A003968EF3448927FAA3396049BE36CF1F117840E734448F0E409A19610E1E85CF9EBA91C46B11E889A64DBF2184A1983C53F84B8996ECA94C9A677380CD62BC089A2C4AB387A5D751FBDDDF1A52D52C2BFC99E2853DB4879C44B7393992E9A39C7850D1AC66CA95938110F23EEF29E9FD29290A106D12B5B75D8E10B9911233DA5189A6093494A0E3CAF5F8C2D5AF3FE8E4CE0FC8784706266971819E9B1ACA5812300657FE8FDE494F568745A11F017B94CB4BFFB35153498AF326F32D6FFE6CC6320B05188819F19539A8BF30E5D75345CD3E4D4A6D7E29AABC6F9101C45F052780BD4269DEDAAA9D467BEBBC90713CC19ADEA442572E072FE68FD04CD6285AB67A03D5AB84D4EEB8731A645C54CAE16CC7E7108592713ABC09B6D4822ED53D0A95305FE4DCB2C077B3B5159A385A2EB91D35D5017A94273965A7FCBE7B04263293F9A1D4A68D115BF97761D26C98179E9A0AB7AABABBE427B76B4F99FDD6768CB07702A9906B978BB482FAF9BEF48D96FA92E581C28019026FD9D3944ED905EBB39155158FA17971FD97B5BA4D18CBDF374ACB7C332C2AFE174335D5B329A1D43FA79F3D8245335C820163208A4E4B30974D3DC842C1CFA4D1C49D2A3F9DE9F45EAC3279F44F72839A44013C28DBE4697FC141E57F0865A10C53A2ED59F9134E9481956F063FD5BD

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 805.89001 536.28003 rc
124.72441 450.39026 m
205.72441 450.39026 l
205.72441 414.39026 l
124.72441 414.39026 l
h
124.72441 450.39026 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
124.72441 85.889763 m
205.72441 85.889763 l
205.72441 121.88976 l
124.72441 121.88976 l
h
124.72441 85.889763 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 165.22441 432.39026 cm
/F1.1[ 12 0 0 -12 0 0]sf
-26.349609 4 m
(!"#$%&'\(\))[ 8.666016 6.673828 6.673828 6.673828 3.333984 6.673828 3.996094 3.333984 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
124.72441 385.61859 m
205.72441 385.61859 l
205.72441 349.61859 l
124.72441 349.61859 l
h
124.72441 385.61859 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
124.72441 150.66142 m
205.72441 150.66142 l
205.72441 186.66142 l
124.72441 186.66142 l
h
124.72441 150.66142 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 165.22441 367.61859 cm
-26.349609 4 m
(!"#$%&'\(*)[ 8.666016 6.673828 6.673828 6.673828 3.333984 6.673828 3.996094 3.333984 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
124.72441 320.84695 m
205.72441 320.84695 l
205.72441 284.84695 l
124.72441 284.84695 l
h
124.72441 320.84695 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
124.72441 215.43307 m
205.72441 215.43307 l
205.72441 251.43307 l
124.72441 251.43307 l
h
124.72441 215.43307 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 165.22441 302.84695 cm
-26.349609 4 m
(!"#$%&'\(+)[ 8.666016 6.673828 6.673828 6.673828 3.333984 6.673828 3.996094 3.333984 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
124.72441 252.81544 m
205.72441 252.81544 l
205.72441 216.81544 l
124.72441 216.81544 l
h
124.72441 252.81544 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
124.72441 283.46457 m
205.72441 283.46457 l
205.72441 319.46457 l
124.72441 319.46457 l
h
124.72441 283.46457 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 165.22441 234.81544 cm
-26.349609 4 m
(!"#$%&'\(,)[ 8.666016 6.673828 6.673828 6.673828 3.333984 6.673828 3.996094 3.333984 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
522.04401 493.99493 m
549.38696 480.32352 549.38696 458.15778 522.04401 444.48636 c
494.70114 430.81488 450.36969 430.81488 423.02689 444.48636 c
395.6839 458.15778 395.6839 480.32352 423.02689 493.99493 c
450.36969 507.66641 494.70114 507.66641 522.04401 493.99493 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
522.04401 42.285091 m
549.38696 55.956509 549.38696 78.122231 522.04401 91.793648 c
494.70114 105.46513 450.36969 105.46513 423.02689 91.793648 c
395.6839 78.122231 395.6839 55.956509 423.02689 42.285091 c
450.36969 28.613607 494.70114 28.613607 522.04401 42.285091 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 472.53543 469.24063 cm
-20.34082 -10 m
(-./0\(12\()[ 8.003906 8.003906 6.000000 6.000000 3.333984 2.666016 6.673828 0.000000 ] xS
-47.024414 4 m
(3&4566&27#%152\()[ 8.666016 6.673828 6.000000 6.673828 9.996094 9.996094 6.673828 6.673828 6.673828 6.673828 3.333984 2.666016 6.673828 6.673828 0.000000 ] xS
-23.003906 18 m
(890%&60)[ 8.003906 6.000000 6.000000 3.333984 6.673828 9.996094 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
522.04401 415.47525 m
549.38696 401.80383 549.38696 379.63809 522.04401 365.96667 c
494.70114 352.2952 450.36969 352.2952 423.02689 365.96667 c
395.6839 379.63809 395.6839 401.80383 423.02689 415.47525 c
450.36969 429.14673 494.70114 429.14673 522.04401 415.47525 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
522.04401 120.80478 m
549.38696 134.4762 549.38696 156.64192 522.04401 170.31334 c
494.70114 183.98482 450.36969 183.98482 423.02689 170.31334 c
395.6839 156.64192 395.6839 134.4762 423.02689 120.80478 c
450.36969 107.13329 494.70114 107.13329 522.04401 120.80478 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 472.53543 390.72095 cm
-43.347656 -3 m
(-'5:161%9\(;#0&7\()[ 8.003906 3.996094 6.673828 6.000000 2.666016 9.996094 2.666016 3.333984 6.000000 3.333984 8.003906 6.673828 6.000000 6.673828 6.673828 0.000000 ] xS
-50.033203 11 m
(8541#<\(=$$<14#%1520)[ 8.003906 6.673828 6.000000 2.666016 6.673828 2.666016 2.677734 8.003906 6.673828 6.673828 2.666016 2.666016 6.000000 6.673828 3.333984 2.666016 6.673828 6.673828 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
522.04401 330.43588 m
549.38696 316.76447 549.38696 294.59872 522.04401 280.92731 c
494.70114 267.25583 450.36969 267.25583 423.02689 280.92731 c
395.6839 294.59872 395.6839 316.76447 423.02689 330.43588 c
450.36969 344.10736 494.70114 344.10736 522.04401 330.43588 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
522.04401 205.84415 m
549.38696 219.51556 549.38696 241.68129 522.04401 255.35271 c
494.70114 269.0242 450.36969 269.0242 423.02689 255.35271 c
395.6839 241.68129 395.6839 219.51556 423.02689 205.84415 c
450.36969 192.17267 494.70114 192.17267 522.04401 205.84415 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 472.53543 305.68158 cm
-36.580078 4 m
(>&?\(/'#4@12A)[ 11.115234 6.673828 6.673828 3.123047 6.890625 3.996094 6.673828 6.000000 6.000000 2.666016 6.673828 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
522.04401 247.38075 m
549.38696 233.70934 549.38696 211.54361 522.04401 197.87219 c
494.70114 184.20071 450.36969 184.20071 423.02689 197.87219 c
395.6839 211.54361 395.6839 233.70934 423.02689 247.38075 c
450.36969 261.05225 494.70114 261.05225 522.04401 247.38075 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 536.28003 cm
522.04401 288.89926 m
549.38696 302.57068 549.38696 324.73639 522.04401 338.40781 c
494.70114 352.07932 450.36969 352.07932 423.02689 338.40781 c
395.6839 324.73639 395.6839 302.57068 423.02689 288.89926 c
450.36969 275.22778 494.70114 275.22778 522.04401 288.89926 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 472.53543 222.62648 cm
-44.791992 -3 m
(/16&BC#'1#2\(D0&'\()[ 6.890625 2.666016 9.996094 6.673828 3.996094 6.000000 6.673828 3.996094 2.666016 6.673828 6.673828 3.333984 6.673828 6.000000 6.673828 3.996094 0.000000 ] xS
-19.341797 11 m
($'5E<&0)[ 6.673828 3.996094 6.673828 6.000000 2.666016 6.673828 0.000000 ] xS
0 J
0 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 536.28003 cm
216.18323 100.02711 m
393.26559 71.886276 l
S
0 i
394.46631 73.843407 m
393.1254 72.870224 392.82727 70.99427 393.80045 69.653343 c
394.77362 68.312424 396.6496 68.014305 397.99051 68.987488 c
399.33145 69.96067 399.62955 71.836624 398.65637 73.177551 c
397.6832 74.518471 395.80722 74.816589 394.46631 73.843407 c
S
214.98251 98.069977 m
216.32343 99.043159 216.62155 100.91911 215.64836 102.26004 c
214.67519 103.60096 212.79922 103.89908 211.4583 102.9259 c
210.11737 101.95271 209.81926 100.07676 210.79245 98.735832 c
211.76562 97.394913 213.64159 97.096794 214.98251 98.069977 c
S
0.60000002 i
216.21031 168.24673 m
393.23849 145.39894 l
S
0 i
394.3815 147.39034 m
393.06958 146.37836 392.82645 144.49449 393.83844 143.1826 c
394.8504 141.8707 396.73428 141.62756 398.04617 142.63953 c
399.35806 143.6515 399.6012 145.53537 398.58923 146.84727 c
397.57727 148.15916 395.69339 148.4023 394.3815 147.39034 c
S
215.06732 166.25533 m
216.37923 167.2673 216.62236 169.15117 215.61038 170.46307 c
214.59842 171.77496 212.71454 172.01811 211.40265 171.00613 c
210.09074 169.99417 209.84761 168.11029 210.85959 166.7984 c
211.87155 165.4865 213.75543 165.24336 215.06732 166.25533 c
S
0.60000002 i
216.26347 232.37816 m
393.18533 230.66908 l
S
0 i
394.08447 232.78181 m
392.90164 231.62161 392.8833 229.72221 394.04349 228.53938 c
395.20367 227.35654 397.10309 227.3382 398.28592 228.4984 c
399.46878 229.6586 399.48712 231.558 398.3269 232.74083 c
397.16672 233.92368 395.2673 233.94202 394.08447 232.78181 c
S
215.36435 230.26543 m
216.54718 231.42563 216.56552 233.32503 215.40533 234.50786 c
214.24513 235.6907 212.34572 235.70905 211.16289 234.54884 c
209.98006 233.38864 209.9617 231.48924 211.1219 230.30641 c
212.2821 229.12357 214.18152 229.10522 215.36435 230.26543 c
S
0.60000002 i
216.25011 302.72849 m
393.1987 314.22427 l
S
0 i
393.93802 316.3981 m
392.84488 315.15305 392.96802 313.25754 394.21307 312.16437 c
395.45813 311.07123 397.35364 311.19437 398.44678 312.43942 c
399.53995 313.68448 399.41678 315.57999 398.17172 316.67316 c
396.92667 317.7663 395.03116 317.64316 393.93802 316.3981 c
S
215.5108 300.55466 m
216.60394 301.79971 216.4808 303.69522 215.23575 304.78836 c
213.99069 305.88153 212.09518 305.75839 211.00203 304.51334 c
209.90887 303.26825 210.03203 301.37277 211.27708 300.2796 c
212.52214 299.18646 214.41765 299.3096 215.5108 300.55466 c
S
ep
end
%%Trailer
%%EOF
